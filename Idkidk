local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Main GUI
local MainGui = Instance.new("ScreenGui", PlayerGui)
MainGui.Name = "KillAllUI"
MainGui.ResetOnSpawn = false

local MainFrame = Instance.new("Frame", MainGui)
MainFrame.Size = UDim2.new(0, 150, 0, 50)
MainFrame.Position = UDim2.new(1, -160, 0, 10)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BackgroundTransparency = 0.2
MainFrame.Active = true
Instance.new("UICorner", MainFrame).CornerRadius = UDim.new(0, 8)

-- Drag handle (now actually controls dragging)
local DragHandle = Instance.new("TextButton", MainFrame)
DragHandle.Size = UDim2.new(1, 0, 0, 15)
DragHandle.Position = UDim2.new(0, 0, 0, 0)
DragHandle.BackgroundTransparency = 0.7
DragHandle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
DragHandle.Text = "â‰¡ Drag"
DragHandle.TextColor3 = Color3.fromRGB(200, 200, 200)
DragHandle.TextSize = 12
DragHandle.Font = Enum.Font.GothamBold
Instance.new("UICorner", DragHandle).CornerRadius = UDim.new(0, 8)

-- Make only the drag handle control dragging
local UserInputService = game:GetService("UserInputService")

local dragging = false
local dragStart
local startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(
        startPos.X.Scale, startPos.X.Offset + delta.X,
        startPos.Y.Scale, startPos.Y.Offset + delta.Y
    )
end

DragHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        updateDrag(input)
    end
end)

-- Toggle button
local Btn = Instance.new("TextButton", MainFrame)
Btn.Size = UDim2.new(1, -10, 1, -20)
Btn.Position = UDim2.new(0, 5, 0, 15)
Btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Btn.BackgroundTransparency = 0.3
Btn.TextColor3 = Color3.fromRGB(255, 80, 80)
Btn.Font = Enum.Font.GothamBold
Btn.TextSize = 14
Btn.Text = "OFF"
Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 6)

local Enabled = false

Btn.MouseButton1Click:Connect(function()
    Enabled = not Enabled
    Btn.Text = Enabled and "ON" or "OFF"
    Btn.TextColor3 = Enabled and Color3.fromRGB(80, 255, 80) or Color3.fromRGB(255, 80, 80)
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if not Enabled then return end
    
    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then
            local char = plr.Character
            if char and char:FindFirstChild("HumanoidRootPart") and char:FindFirstChild("Humanoid") and char.Humanoid.Health > 0 then
                if LocalPlayer:DistanceFromCharacter(char.HumanoidRootPart.Position) <= 1000000 then
                    local tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
                    if tool and tool:FindFirstChild("Handle") then
                        tool:Activate()
                        for _, part in pairs(char:GetChildren()) do
                            if part:IsA("BasePart") then
                                firetouchinterest(tool.Handle, part, 0)
                                firetouchinterest(tool.Handle, part, 1)
                            end
                        end
                    end
                end
            end
        end
    end
end)
